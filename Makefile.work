DIRNAME := $(shell basename $(realpath .))
SHELL := /bin/bash

FAILURE := "\e[31mFAILED\e[39m"
SUCCESS := "\e[32mOK\e[39m"
ERROR := "\e[41mERROR\e[49m"

.PHONY: all
all: $(DIRNAME).exe test

%.exe: %.c
	@echo "Building: $<"
	@$(CC) -o $@ $<

%.exe: %.cpp
	@echo "Building: $<"
	@$(CXX) -o $@ $<

%.exe: %.java
	@echo "Building: $<"
	@javac $<
	@echo "java $< | dos2unix" | sed -e 's/.java//;' > $@
	@chmod -v +x $@

%.exe: %.sh
	@echo "Linking: $<"
	@ln -sv $< $@
	@chmod -v +x $@

%.exe: %.sql
	@echo "Creating: $@"
	@touch $@
	@chmod -v +x $@

.PHONY: clean
clean:
	@rm -fv *.class *.exe

.PHONY: veryclean
veryclean: clean
	@rm -fv *.stackdump

.PHONY: test
test: $(DIRNAME).exe
	@if [ $$(ls input* 2>/dev/null | wc -l) -gt 0 ]; then \
	  testdir="./"; \
	elif [ $$(ls ../input* 2>/dev/null | wc -l) -gt 0 ]; then \
	  testdir="../"; \
	fi; \
	for input in $$(ls $${testdir}input* 2>/dev/null); do \
	  path=$${input%%/*}; \
	  test=$${input##.*input}; \
	  test=$${test%.txt}; \
	  echo "Test case: $${test}: Running"; \
	  cat $${input} | \
	    ./$(DIRNAME).exe | \
	    diff <(sed -e '$$a\' /dev/stdin) <(sed -e '$$a\' $${path}/output$${test}.txt); \
	  retval=$$?; \
	  echo -n "Test case: $${test}: "; \
	  case $${retval} in \
	  0) echo -e $(SUCCESS);; \
	  1) echo -e $(FAILURE);; \
	  *) echo -e $(ERROR);; \
	  esac; \
	done
